{"version":3,"file":"ngp-image-picker.js","sources":["../../../projects/ngp-image-picker/src/lib/ngp-image-picker.component.ts","../../../projects/ngp-image-picker/src/lib/ngp-image-picker.module.ts","../../../projects/ngp-image-picker/src/public-api.ts","../../../projects/ngp-image-picker/src/ngp-image-picker.ts"],"sourcesContent":["import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { ResizeObserver } from 'resize-observer';\n\nexport interface ImagePickerConf {\n  width?: string;\n  height?: string;\n  borderRadius?: string;\n  compressInitial?: boolean;\n  language?: string;\n  hideDeleteBtn?: boolean;\n  hideDownloadBtn?: boolean;\n  hideEditBtn?: boolean;\n  hideAddBtn?: boolean;\n}\n\nexport interface ImageConverterInput {\n  width?: number;\n  height?: number;\n  quality?: number;\n  dataType?: string;\n  maintainRatio?: boolean;\n  changeHeight?: boolean;\n  changeWidth?: boolean;\n}\n\n@Component({\n  selector: 'ngp-image-picker',\n  templateUrl: './ngp-image-picker.component.html',\n  styleUrls: ['./ngp-image-picker.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NgpImagePickerComponent implements OnInit {\n  config: ImagePickerConf = {\n    height: '240px',\n    width: '320px',\n    borderRadius: '16px',\n    compressInitial: true,\n    language: 'en',\n    hideDeleteBtn: false,\n    hideDownloadBtn: false,\n    hideEditBtn: false,\n    hideAddBtn: false,\n\n  };\n\n  observer = null;\n  showCrop = false;\n  imageSrc: any;\n  originImageSrc: any;\n  loadImage = false;\n  fileType;\n  urlImage;\n  uuidFilePicker = Date.now().toString(20);\n  showEditPanel = false;\n  quality = 92;\n  format = 'jpeg';\n  allFormats = ['webp', 'jpeg', 'png'];\n  maxHeight = 2000;\n  maxWidth = 2000;\n  cropHeight = 150;\n  cropWidth = 150;\n  maintainAspectRatio = true;\n  imageName = 'donload';\n  lastOriginSrc;\n  ///////////////////////////////////////////////////////\n  labelEn: any = {\n    'Upload a image': 'Upload a image',\n    'You must edit the image in order to resize it':\n      'You must edit the image in order to resize it',\n    'too large': 'too large',\n    'Open the editor panel': 'Open the editor panel',\n    'Download the image': 'Download the image',\n    'Control Panel': 'Control Panel',\n    Quality: 'Quality',\n    'Max dimensions': 'Max dimensions',\n    'aspect-ratio': 'aspect-ratio',\n    'max-width(px)': 'max-width(px)',\n    'max-height(px)': 'max-height(px)',\n    Format: 'Format',\n    Crop: 'Crop',\n    'width(px)': 'width(px)',\n    'height(px)': 'height(px)',\n    'Remove': 'Remove',\n  };\n  labelEs: any = {\n    'Upload a image': 'Suba una imagen',\n    'You must edit the image in order to resize it':\n      'Debe editar la imagen para disminuir su tamaño',\n    'too large': 'muy grande',\n    'Open the editor panel': 'Abra el panel de edición',\n    'Download the image': 'Descarge la imagen',\n    'Control Panel': 'Panel de control',\n    'Remove': 'Quitar',\n    Quality: 'Calidad',\n    'Max dimensions': 'Dimensiones',\n    'aspect-ratio': 'relación-aspecto',\n    'max-width(px)': 'max. ancho',\n    'max-height(px)': 'max. alto',\n    Format: 'Formato',\n    Crop: 'Recortar',\n    'width(px)': 'ancho(px)',\n    'height(px)': 'altura(px)',\n\n  };\n\n  labels = this.labelEn;\n  arrayCopiedImages: any[] = [];\n\n  @Input() set _imageSrc(value) {\n    if (value != undefined) {\n      this.parseToBase64(value).then((dataUri) => {\n        this.imageSrc = dataUri;\n        this.arrayCopiedImages = [];\n        this.arrayCopiedImages.push(this.imageSrc);\n        this.originImageSrc = value;\n        this.lastOriginSrc = value;\n        this.$imageOriginal.next(this.originImageSrc);\n        this.loadImage = true;\n      });\n    } else {\n      this.imageSrc = null;\n      this.originImageSrc = null;\n      this.loadImage = false;\n      this.arrayCopiedImages = [];\n      this.lastOriginSrc = null;\n      this.$imageOriginal.next(null);\n      this.format = 'jpeg';\n      this.maxHeight = 2000;\n      this.maxWidth = 2000;\n      this.cropHeight = 150;\n      this.cropWidth = 150;\n      this.maintainAspectRatio = true;\n      this.showEditPanel = false;\n    }\n  }\n\n  @Input() set _config(value) {\n    this.processConfig(value);\n  }\n\n  @ViewChild('imagePicker', { static: false }) imagePicker: ElementRef;\n  @Output() $imageChanged: EventEmitter<any> = new EventEmitter<any>();\n  @Output() $imageOriginal: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  onUpload(event) {\n    event.preventDefault();\n    // const element: HTMLElement = document.getElementById('filePicker-' + this.uuidFilePicker) as HTMLElement;\n    this.imagePicker.nativeElement.click();\n    // element.click();\n  }\n\n  handleFileSelect(evt) {\n    const files = evt.target?.files;\n    if (files) {\n      const file = files[0];\n      this.imageName = file.name.split('.')[0];\n      // console.log('NgpImagePickerComponent -> handleFileSelect -> file.name', file.name);\n      this.fileType = file.type;\n      this.urlImage = `data:${file.type};base64,`;\n      if (files && file) {\n        const reader = new FileReader();\n        reader.onload = this.handleReaderLoaded.bind(this);\n        reader.readAsBinaryString(file);\n      }\n    }\n  }\n\n  async handleReaderLoaded(readerEvt) {\n    const binaryString = readerEvt.target.result;\n    const base64textString = btoa(binaryString);\n    this.originImageSrc = this.urlImage + base64textString;\n    this.lastOriginSrc = this.urlImage + base64textString;\n    if (this.config.compressInitial) {\n      this.quality = 92;\n      const input: ImageConverterInput = {\n        dataType: this.format,\n        quality: 0.92,\n        maintainRatio: true,\n      };\n      this.imageSrc = await this.resizedataURL(\n        this.urlImage + base64textString,\n        input\n      );\n    } else {\n      this.imageSrc = this.urlImage + base64textString;\n      this.arrayCopiedImages = [];\n      this.arrayCopiedImages.push({\n        lastImage: this.imageSrc,\n        width: this.maxWidth,\n        height: this.maxHeight,\n        quality: this.quality,\n      });\n      this.$imageOriginal.next(this.imageSrc);\n    }\n    this.$imageChanged.next(this.imageSrc);\n    this.loadImage = true;\n  }\n\n  onOpenEditPanel() {\n    this.showEditPanel = true;\n  }\n\n  onCloseEditPanel() {\n    if (this.observer instanceof ResizeObserver) {\n      this.observer.unobserve(document.getElementById('image-croper'));\n      this.observer.unobserve(document.getElementById('image-full'));\n    }\n    this.showCrop = false;\n    this.showEditPanel = false;\n  }\n\n  parseToBase64(imageUrl) {\n    let types = imageUrl.split('.');\n    let type = types[types.length - 1];\n    // console.log('ImagePickerComponent -> ngOnInit -> type', type);\n    if (type && (type == 'png' || type == 'jpeg' || type == 'webp')) {\n      type = type;\n    } else {\n      type = 'jpeg';\n    }\n    this.format = type;\n    return new Promise((resolve, reject) => {\n      let img = document.createElement('img');\n      img.crossOrigin = 'Anonymous';\n      img.src = imageUrl;\n      this.maxHeight = img.height;\n      this.maxWidth = img.width;\n      img.onload = function () {\n        let canvas = document.createElement('canvas');\n        let ctx = canvas.getContext('2d');\n        let ratio = 1.0;\n        canvas.width = img.width * ratio;\n        canvas.height = img.height * ratio;\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        let dataURI = canvas.toDataURL(`image/${type}`, 0.92);\n        return resolve({\n          dataUri: dataURI,\n          width: canvas.width,\n          height: canvas.height,\n        });\n      };\n    }).then((data: any) => {\n      // console.log('ImagePickerComponent -> ngOnInit -> data', data);\n      this.maxHeight = data.height;\n      this.maxWidth = data.width;\n      return data.dataUri;\n    });\n  }\n\n  processConfig(value: ImagePickerConf) {\n    if (value && value.constructor == Object) {\n      this.config = { ...this.config, ...value };\n      if (value.language != undefined) {\n        if (value.language == 'en') {\n          this.labels = { ...this.labelEn };\n        }\n        if (value.language == 'es') {\n          this.labels = { ...this.labelEs };\n        }\n      }\n    }\n\n  }\n\n  /////////////////////////////////////////////////\n  resizedataURL(datas, input: ImageConverterInput): Promise<any> {\n    return new Promise(async function (resolve, reject) {\n      let img = document.createElement('img');\n      img.src = datas + '';\n      img.crossOrigin = 'Anonymous';\n      let quality = input.quality ? input.quality : 1.0;\n      let maintainRatio =\n        input.maintainRatio != undefined ? input.maintainRatio : true;\n\n      img.onload = function () {\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        let ratio = img.width / img.height;\n        let width = input.width ? input.width : img.width;\n        let height = input.height ? input.height : img.height;\n\n        if (maintainRatio) {\n          if (input.changeHeight) {\n            canvas.width = height * ratio;\n            canvas.height = height;\n          } else {\n            canvas.width = width;\n            canvas.height = width / ratio;\n          }\n        } else {\n          canvas.width = width;\n          canvas.height = height;\n        }\n\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        let type = input.dataType ? input.dataType : 'webp';\n        var dataURI = canvas.toDataURL(`image/${type}`, quality);\n        resolve({\n          dataUri: dataURI,\n          width: canvas.width,\n          height: canvas.height,\n        });\n      };\n    }).then((data: any) => {\n      // console.log('ImagePickerComponent -> ngOnInit -> data', data);\n      this.maxHeight = data.height;\n      this.maxWidth = data.width;\n      if (this.arrayCopiedImages.length <= 20) {\n        this.arrayCopiedImages.push({\n          lastImage: data.dataUri,\n          width: this.maxWidth,\n          height: this.maxHeight,\n          quality: this.quality,\n        });\n      }\n\n      return data.dataUri;\n    });\n  }\n\n  calculateSize() {\n    let base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n    if (this.imageSrc && base64regex.test(this.imageSrc.split(',')[1])) {\n      return Math.ceil(((3 / 4) * this.imageSrc.length) / 1024);\n    } else {\n      return;\n    }\n  }\n\n  async onChangeQuality(event) {\n    const qualityItem = this.quality / 100;\n    this.maxHeight = this.maxHeight && +this.maxHeight ? this.maxHeight : 2000;\n    // console.log('ImagePickerComponent -> onChangeQuality -> this.maxHeight', this.maxHeight);\n    this.maxWidth = this.maxWidth && +this.maxWidth ? this.maxWidth : 2000;\n    // console.log('ImagePickerComponent -> onChangeQuality ->  this.maxWidth', this.maxWidth);\n    await this.wait(250);\n    try {\n      const input: ImageConverterInput = {\n        height: this.maxHeight,\n        width: this.maxWidth,\n        dataType: this.format,\n        quality: qualityItem,\n        maintainRatio: this.maintainAspectRatio,\n      };\n\n      this.imageSrc = await this.resizedataURL(this.originImageSrc, input);\n      this.$imageChanged.next(this.imageSrc);\n      this.loadImage = true;\n    } catch (error) {\n      this.loadImage = true;\n    }\n  }\n  async onChangeFormat(format) {\n    let qualityItem = this.quality / 100;\n    this.maxHeight = this.maxHeight && +this.maxHeight ? this.maxHeight : 2000;\n    this.maxWidth = this.maxWidth && +this.maxWidth ? this.maxWidth : 2000;\n    // console.log('ImagePickerComponent -> onChangeFormat -> this.maintainAspectRatio', this.maintainAspectRatio);\n    await this.wait(250);\n    try {\n      let input: ImageConverterInput = {\n        height: this.maxHeight,\n        width: this.maxWidth,\n        dataType: this.format,\n        quality: qualityItem,\n        maintainRatio: this.maintainAspectRatio,\n      };\n      this.imageSrc = await this.resizedataURL(this.originImageSrc, input);\n      this.$imageChanged.next(this.imageSrc);\n      this.loadImage = true;\n    } catch (error) {\n      this.loadImage = true;\n    }\n  }\n\n  async onChangeSize(changeWidth?, changeHeight?) {\n    let qualityItem = this.quality / 100;\n    this.maxHeight = this.maxHeight && +this.maxHeight ? this.maxHeight : 2000;\n    this.maxWidth = this.maxWidth && +this.maxWidth ? this.maxWidth : 2000;\n    await this.wait(500);\n\n    try {\n      let input: ImageConverterInput = {\n        height: this.maxHeight,\n        width: this.maxWidth,\n        dataType: this.format,\n        quality: qualityItem,\n        maintainRatio: this.maintainAspectRatio,\n        changeHeight: changeHeight,\n        changeWidth: changeWidth,\n      };\n      this.imageSrc = await this.resizedataURL(this.originImageSrc, input);\n      this.$imageChanged.next(this.imageSrc);\n      this.loadImage = true;\n    } catch (error) {\n      this.loadImage = true;\n    }\n  }\n\n  onChangeCrop(data) {\n    const croper = document.getElementById('image-croper');\n    croper.style.width = this.cropWidth + 'px';\n    croper.style.height = this.cropHeight + 'px';\n  }\n  ////////////////////////////////////////////////\n\n  wait(ms?): Promise<any> {\n    ms = ms ? ms : 1000;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        return resolve(true);\n      }, ms);\n    });\n  }\n\n  dragElement(elemnt) {\n    var pos1 = 0,\n      pos2 = 0,\n      pos3 = 0,\n      pos4 = 0;\n    if (document.getElementById(elemnt.id + '-header')) {\n      /* if present, the header is where you move the DIV from:*/\n      document.getElementById(\n        elemnt.id + '-header'\n      ).onmousedown = dragMouseDown;\n      document.getElementById(\n        elemnt.id + '-header'\n      ).ontouchstart = dragMouseDown;\n    } else {\n      /* otherwise, move the DIV from anywhere inside the DIV:*/\n      elemnt.onmousedown = dragMouseDown;\n      elemnt.ontouchstart = dragMouseDown;\n    }\n\n    function dragMouseDown(e) {\n      e = e || window.event;\n      e.preventDefault();\n      // get the mouse cursor position at startup:\n      pos3 = e.clientX;\n      pos4 = e.clientY;\n      document.onmouseup = closeDragElement;\n      document.ontouchend = closeDragElement;\n      // call a function whenever the cursor moves:\n      document.onmousemove = elementDrag;\n      document.ontouchmove = elementDrag;\n    }\n\n    function elementDrag(e) {\n      let holderImage = document.getElementById('image-full');\n      e = e || window.event;\n      e.preventDefault();\n      // calculate the new cursor position:\n      pos1 = pos3 - e.clientX;\n      pos2 = pos4 - e.clientY;\n      pos3 = e.clientX;\n      pos4 = e.clientY;\n\n      const newTop = elemnt.offsetTop - pos2;\n      const newLeft = elemnt.offsetLeft - pos1;\n      const rectHolder = holderImage.getBoundingClientRect();\n      const rectElemnt = elemnt.getBoundingClientRect();\n      if (newTop >= rectHolder.y + 8) {\n        elemnt.style.top =\n          Math.min(\n            newTop,\n            rectHolder.y + rectHolder.height - rectElemnt.height - 4\n          ) + 'px';\n      }\n      if (\n        newLeft > rectHolder.x + 4 &&\n        rectHolder.x + rectHolder.width > rectElemnt.x + rectElemnt.width + 2\n      ) {\n        elemnt.style.left =\n          Math.min(\n            newLeft,\n            rectHolder.x + rectHolder.width - rectElemnt.width - 4\n          ) + 'px';\n      }\n    }\n\n    function closeDragElement() {\n      /* stop moving when mouse button is released:*/\n      document.onmouseup = null;\n      document.onmousemove = null;\n      document.ontouchend = null;\n      document.ontouchmove = null;\n    }\n  }\n\n  onCropStateChange() {\n    const croper = document.getElementById('image-croper');\n    if (this.showCrop) {\n      croper.style.opacity = '1.0';\n      this.dragElement(croper);\n      this.observer = new ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          if (this.showEditPanel) {\n            const elemntCropper = document.getElementById('image-croper');\n            const rectHolder = document\n              .getElementById('image-full')\n              .getBoundingClientRect();\n            const rectElemnt = elemntCropper.getBoundingClientRect();\n            const maxWidth = rectHolder.x + rectHolder.width - rectElemnt.x - 4;\n            const maxHeight =\n              rectHolder.y + rectHolder.height - rectElemnt.y - 4;\n            elemntCropper.style.maxWidth = maxWidth + 'px';\n            elemntCropper.style.maxHeight = maxHeight + 'px';\n            this.cropWidth = rectElemnt.width;\n            this.cropHeight = rectElemnt.height;\n            if (entry.target.id == 'image-full') {\n              if (rectHolder.top > 0) {\n                elemntCropper.style.top = rectHolder.top + 4 + 'px';\n              }\n              elemntCropper.style.left = rectHolder.left + 4 + 'px';\n            }\n          }\n        });\n      });\n      this.observer.observe(document.getElementById('image-croper'));\n      this.observer.observe(document.getElementById('image-full'));\n    } else {\n      croper.style.opacity = '0.0';\n      if (this.observer instanceof ResizeObserver) {\n        this.observer.unobserve(document.getElementById('image-croper'));\n        this.observer.unobserve(document.getElementById('image-full'));\n      }\n    }\n  }\n\n  onCrop(type?) {\n    type = type ? type : this.format;\n    const croper = document.getElementById('image-croper');\n    const rectCroper = croper.getBoundingClientRect();\n    const dataHolderRect = document\n      .getElementById('image-full')\n      .getBoundingClientRect();\n    const canvas = document.createElement('canvas');\n    new Promise((resolve, reject) => {\n      let ctx = canvas.getContext('2d');\n      let img = document.getElementById('image-full');\n      let image = new Image();\n      image.src = this.imageSrc;\n      image.onload = () => {\n        let ratio = image.height / dataHolderRect.height;\n        let newWidth = rectCroper.width * ratio;\n        let newHeight = rectCroper.height * ratio;\n        canvas.height = newHeight;\n        canvas.width = newWidth;\n        ctx.drawImage(\n          image,\n          Math.abs(rectCroper.x * ratio) - Math.abs(dataHolderRect.x * ratio),\n          Math.abs(rectCroper.y * ratio) - Math.abs(dataHolderRect.y * ratio),\n          newWidth,\n          newHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        // ctx.drawImage(image, 90, 130, 50, 60, 10, 10, 50, 60);\n        resolve(canvas.toDataURL(`image/${type}`, 0.98));\n      };\n      image.onerror = (e) => {\n        reject(e);\n      };\n    })\n      .then((dataUri) => {\n        // console.log('NgpImagePickerComponent -> onCrop -> dataUri', dataUri);\n        this.imageSrc = dataUri;\n        this.showCrop = false;\n        this.onCropStateChange();\n        this.maxWidth = canvas.width;\n        this.maxHeight = canvas.height;\n        this.lastOriginSrc = this.originImageSrc + '';\n        this.originImageSrc = dataUri;\n        this.$imageChanged.next(this.imageSrc);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n  onRestore() {\n    if (this.arrayCopiedImages.length) {\n      let lastState = this.arrayCopiedImages.pop();\n      this.imageSrc = lastState.lastImage;\n      this.maxWidth = lastState.width;\n      this.maxHeight = lastState.height;\n      this.originImageSrc = this.lastOriginSrc + '';\n    } else {\n      this.imageSrc = this.lastOriginSrc;\n      this.originImageSrc = this.lastOriginSrc + '';\n    }\n    this.$imageChanged.next(this.imageSrc);\n  }\n\n  onRemove() {\n    this.imageSrc = null;\n    this.originImageSrc = null;\n    this.loadImage = false;\n    this.arrayCopiedImages = [];\n    this.lastOriginSrc = null;\n    this.$imageOriginal.next(null);\n    this.$imageChanged.next(null);\n    this.format = 'jpeg';\n    this.maxHeight = 2000;\n    this.maxWidth = 2000;\n    this.cropHeight = 150;\n    this.cropWidth = 150;\n    this.maintainAspectRatio = true;\n    this.showEditPanel = false;\n  }\n}\n","import { NgpImagePickerComponent } from './ngp-image-picker.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [NgpImagePickerComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatSliderModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatCheckboxModule,\n  ],\n  exports: [NgpImagePickerComponent],\n})\nexport class NgpImagePickerModule {}\n","/*\n * Public API Surface of ngp-image-picker\n */\n\nexport * from './lib/ngp-image-picker.component';\nexport * from './lib/ngp-image-picker.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}