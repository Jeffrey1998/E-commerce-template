{"__symbolic":"module","version":4,"metadata":{"ImagePickerConf":{"__symbolic":"interface"},"ImageConverterInput":{"__symbolic":"interface"},"NgpImagePickerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":34,"character":1},"arguments":[{"selector":"ngp-image-picker","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":38,"character":17},"member":"None"},"template":"<div *ngIf=\"!loadImage\" class=\"place-image\">\n  <div class=\"image-holder\" [ngStyle]=\"{\n      width: this.config.width,\n      height: this.config.height,\n      borderRadius: this.config.borderRadius\n    }\">\n    <button matTooltip=\"{{ labels['Upload a image'] }}\" class=\"image-upload-btn\" mat-icon-button\n      (click)=\"onUpload($event)\">\n      <mat-icon class=\"mat-18\">add_a_photo</mat-icon>\n    </button>\n\n    <input #imagePicker type=\"file\" style=\"display: none\" [id]=\"'filePicker-' + this.uuidFilePicker\"\n      (change)=\"handleFileSelect($event)\" />\n  </div>\n</div>\n<div *ngIf=\"loadImage\" class=\"place-image\">\n  <div class=\"image-holder-loaded\" [ngStyle]=\"{\n      width: this.config.width,\n      height: this.config.height,\n      borderRadius: this.config.borderRadius\n    }\">\n    <img [src]=\"this.imageSrc\" alt=\"image-loaded\" [ngStyle]=\"{ borderRadius: this.config.borderRadius }\" />\n    <input #imagePicker type=\"file\" style=\"display: none\" [id]=\"'filePicker-' + this.uuidFilePicker\"\n      (change)=\"handleFileSelect($event)\" />\n  </div>\n  <p *ngIf=\"this.calculateSize()\" class=\"mat-caption image-caption\" [ngStyle]=\"{\n      color: this.calculateSize() > 120 ? '#f44336' : 'unset',\n      fontWeight: this.calculateSize() > 120 ? '500' : 'unset'\n    }\">\n    size: {{ this.calculateSize() }}Kb &nbsp; {{ this.format }}\n  </p>\n\n  <div\n    style=\"flex-direction: row; box-sizing: border-box; display: flex; place-content: flex-start; align-items: flex-start\"\n    class=\"editing-bar-btn\">\n    <button *ngIf=\"!this.config.hideAddBtn\" mat-icon-button matTooltip=\"{{ labels['Upload a image'] }}\" (click)=\"onUpload($event)\">\n      <mat-icon class=\"mat-18\">add_a_photo</mat-icon>\n    </button>\n    <button *ngIf=\"!this.config.hideEditBtn\" mat-icon-button matTooltip=\"{{ labels['Open the editor panel'] }}\" (click)=\"onOpenEditPanel()\">\n      <mat-icon class=\"mat-18\">edit</mat-icon>\n    </button>\n    <a *ngIf=\"!this.config.hideDownloadBtn\" matTooltip=\"{{ labels['Download the image'] }}\" [href]=\"this.imageSrc\" mat-icon-button\n      download=\"{{ imageName }}\">\n      <mat-icon class=\"mat-18\">cloud_download</mat-icon>\n    </a>\n    <button *ngIf=\"!this.config.hideDeleteBtn\" mat-icon-button  matTooltip=\"{{ labels['Remove'] }}\" (click)=\"onRemove()\">\n      <mat-icon class=\"mat-18\">delete</mat-icon>\n    </button>\n  </div>\n</div>\n\n<div *ngIf=\"showEditPanel\" id=\"popup\" class=\"popup\">\n  <div\n    style=\"flex-direction: row; box-sizing: border-box; display: flex; place-content: center flex-end; align-items: center\">\n    <button mat-icon-button (click)=\"onCloseEditPanel()\">\n      <mat-icon class=\"mat-18\">clear</mat-icon>\n    </button>\n  </div>\n\n  <div class=\"image-container\">\n    <div class=\"image-holder-full\">\n      <img id=\"image-full\" [src]=\"this.imageSrc\" />\n\n      <div id=\"image-croper\" class=\"image-croper\">\n        <div id=\"image-croper-header\">\n          <mat-icon>drag_indicator</mat-icon>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"control-panel\">\n      <p class=\"title-panel\">{{ labels['Control Panel'] }}</p>\n\n      <p class=\"item-panel\">{{ labels['Quality'] }}</p>\n      <div\n        style=\"flex-direction: row; box-sizing: border-box; display: flex; place-content: flex-start; align-items: flex-start\">\n        <mat-slider color=\"primary\" style=\"max-width: 100%; width: 100%\" (change)=\"onChangeQuality($event.value)\"\n          [(ngModel)]=\"quality\" [min]=\"0\" [max]=\"100\" [step]=\"1\" [thumbLabel]=\"true\">\n        </mat-slider>\n      </div>\n\n      <p class=\"item-panel\">\n        {{ labels['Max dimensions'] }}\n        <mat-checkbox style=\"float: right\" [(ngModel)]=\"maintainAspectRatio\" color=\"primary\">\n          <span class=\"mat-caption\">{{ labels['aspect-ratio'] }}</span>\n        </mat-checkbox>\n      </p>\n      <div\n        style=\"margin-top: 8px !important; flex-flow: row wrap; box-sizing: border-box; display: flex; place-content: flex-start space-between; align-items: flex-start\">\n        <mat-form-field class=\"no-input-style\" style=\"max-width: 48%; width: 48%\" appearance=\"fill\">\n          <mat-label>{{ labels['max-width(px)'] }}</mat-label>\n          <input (change)=\"onChangeSize(true, false)\" matInput placeholder=\"{{ labels['max-width(px)'] }}\"\n            [(ngModel)]=\"maxWidth\" type=\"number\" [min]=\"0\" [max]=\"2000\" />\n        </mat-form-field>\n\n        <mat-form-field class=\"no-input-style\" style=\"max-width: 48%; width: 48%\" appearance=\"fill\">\n          <mat-label>{{ labels['max-height(px)'] }}</mat-label>\n          <input (change)=\"onChangeSize(false, true)\" matInput placeholder=\"{{ labels['max-height(px)'] }}\"\n            [(ngModel)]=\"maxHeight\" type=\"number\" [min]=\"0\" [max]=\"2000\" />\n        </mat-form-field>\n      </div>\n\n      <p class=\"item-panel\">{{ labels['Format'] }}</p>\n      <div\n        style=\"margin-top: 8px !important; flex-direction: row; box-sizing: border-box; display: flex; place-content: flex-start; align-items: flex-start\">\n        <mat-form-field class=\"no-input-style\" style=\"max-width: 100%; width: 100%\" appearance=\"fill\" color=\"primary\">\n          <mat-select [(ngModel)]=\"format\" (selectionChange)=\"onChangeFormat($event.value)\">\n            <mat-option *ngFor=\"let format of allFormats\" [value]=\"format\">\n              {{ format }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <p>\n        <mat-checkbox (change)=\"onCropStateChange()\" [(ngModel)]=\"showCrop\" color=\"primary\">\n          <p class=\"item-panel\">{{ labels['Crop'] }}</p>\n        </mat-checkbox>\n        <button style=\"float: right\" mat-icon-button color=\"primary\" (click)=\"onRestore()\">\n          <mat-icon> refresh </mat-icon>\n        </button>\n      </p>\n\n      <ng-container *ngIf=\"showCrop\">\n        <div\n          style=\"margin-top: 8px !important; flex-flow: row wrap; box-sizing: border-box; display: flex; place-content: flex-start space-between; align-items: flex-start\">\n          <mat-form-field class=\"no-input-style\" style=\"max-width: 48%; width: 48%\" appearance=\"fill\">\n            <mat-label>{{ labels['width(px)'] }}</mat-label>\n            <input (change)=\"onChangeCrop($event.target.valueAsNumber)\" matInput placeholder=\"{{ labels['width(px)'] }}\"\n              [(ngModel)]=\"cropWidth\" type=\"number\" [min]=\"0\" [max]=\"2000\" />\n          </mat-form-field>\n          <mat-form-field class=\"no-input-style\" style=\"max-width: 48%; width: 48%\" appearance=\"fill\">\n            <mat-label>{{ labels['height(px)'] }}</mat-label>\n            <input (change)=\"onChangeCrop($event.target.valueAsNumber)\" matInput\n              placeholder=\"{{ labels['height(px)'] }}\" [(ngModel)]=\"cropHeight\" type=\"number\" [min]=\"0\" [max]=\"2000\" />\n          </mat-form-field>\n        </div>\n\n        <p style=\"margin-bottom: 4px !important\">\n          <button mat-icon-button color=\"primary\" (click)=\"onCrop()\">\n            <mat-icon> crop </mat-icon>\n          </button>\n        </p>\n      </ng-container>\n\n      <div\n        style=\"flex-direction: row; box-sizing: border-box; display: flex; place-content: center space-between; align-items: center\">\n        <button style=\"padding: 0px 8px; height: 34px; box-sizing: border-box; background-color: #fff; color: black\"\n          mat-flat-button (click)=\"onCloseEditPanel()\">Guardar</button>\n\n        <p *ngIf=\"this.calculateSize()\" class=\"mat-caption image-caption\" [ngStyle]=\"{\n            color: this.calculateSize() > 120 ? '#f44336' : 'unset',\n            fontWeight: this.calculateSize() > 120 ? '500' : 'unset'\n          }\">\n          size: {{ this.calculateSize() }}Kb &nbsp; {{ this.format }}\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n","styles":["ngp-image-picker p{margin:0!important;padding:0!important}ngp-image-picker .place-image{align-items:flex-start;box-sizing:border-box;display:flex;flex-direction:column;place-content:flex-start}ngp-image-picker .place-image .image-holder{align-items:center;background-color:#fcfcfc;border:2px solid rgba(0,0,0,.3);border-radius:16px;box-sizing:border-box;display:flex;flex-direction:column;height:240px;max-width:100%!important;place-content:center;position:relative;width:320px}@media (max-width:599px){ngp-image-picker .place-image .image-holder{max-height:250px!important;max-width:100%!important}}ngp-image-picker .place-image .image-holder .image-upload-btn{color:#424242;height:50px;opacity:.85;position:relative;transition:all .5s ease;width:50px}ngp-image-picker .place-image .image-holder .image-upload-btn mat-icon{color:#424242;font-size:50px;height:50px;line-height:50px;width:50px}@media (max-width:599px){ngp-image-picker .place-image .image-holder .image-upload-btn{height:30px;opacity:1;width:30px}ngp-image-picker .place-image .image-holder .image-upload-btn mat-icon{font-size:30px;height:30px;line-height:30px;width:30px}}ngp-image-picker .place-image .image-holder:hover .image-upload-btn{opacity:1;transition:all .5s ease}ngp-image-picker .place-image .image-holder-loaded{align-items:center;border-radius:4px;box-sizing:border-box;display:flex;flex-direction:column;height:240px;max-width:100%!important;padding:2px;place-content:center;position:relative;width:320px}ngp-image-picker .place-image .image-holder-loaded .image-caption{bottom:-22px;position:absolute;right:0}ngp-image-picker .place-image .image-holder-loaded img{-o-object-fit:cover;-o-object-position:center;height:100%;max-height:100%;max-width:100%;object-fit:cover;object-position:center;width:100%}@media (max-width:599px){ngp-image-picker .place-image .image-holder-loaded{max-height:195px!important}}ngp-image-picker .place-image .image-holder-loaded .image-upload-btn{color:#424242;height:50px;opacity:.85;position:relative;transition:all .5s ease;width:50px}ngp-image-picker .place-image .image-holder-loaded .image-upload-btn mat-icon{color:#424242;font-size:50px;height:50px;line-height:50px;width:50px}@media (max-width:599px){ngp-image-picker .place-image .image-holder-loaded .image-upload-btn{height:30px;opacity:1;width:30px}ngp-image-picker .place-image .image-holder-loaded .image-upload-btn mat-icon{font-size:30px;height:30px;line-height:30px;width:30px}}ngp-image-picker .place-image .image-holder-loaded:hover .image-upload-btn{opacity:1;transition:all .5s ease}ngp-image-picker .place-image .editing-bar-btn{margin-top:2px}ngp-image-picker .place-image .editing-bar-btn .mat-icon-button{height:20px;line-height:20px;width:24px}ngp-image-picker .place-image .editing-bar-btn mat-icon{font-size:20px!important;height:20px!important;line-height:20px!important;width:20px!important}ngp-image-picker .place-image .editing-bar-btn button{color:#424242;margin:4px;transition:all .5s ease}ngp-image-picker .place-image .editing-bar-btn button:hover{margin:4px 8px;transform:scale(1.25);transition:all .25s ease-in}ngp-image-picker .place-image .editing-bar-btn a{color:#424242;margin:4px;transition:all .5s ease}ngp-image-picker .place-image .editing-bar-btn a:hover{margin:4px 8px;transform:scale(1.25);transition:all .25s ease-in}ngp-image-picker .popup{-webkit-animation-duration:.4s;-webkit-animation-name:show;animation-duration:.4s;animation-name:show;background-color:rgba(0,0,0,.8);box-sizing:border-box;color:#fff;height:100%;left:0;max-height:100%;overflow:auto;padding:24px;position:fixed;top:0;width:100vw;z-index:1000}ngp-image-picker .popup .image-container{align-items:flex-start;box-sizing:border-box;display:flex;flex-flow:row wrap;height:100%;margin-bottom:50px;margin-top:50px;min-height:100%;min-width:100%;place-content:flex-start center;width:100%}ngp-image-picker .popup .image-container .image-holder-full{display:contents;height:auto;position:relative;width:auto}ngp-image-picker .popup mat-icon{color:#fff}ngp-image-picker .popup img{-o-object-fit:cover;-o-object-position:center;margin:8px;max-height:600px;max-width:100%;object-fit:cover;object-position:center;transition:all .5s ease}@media (max-width:1024px){ngp-image-picker .popup{background-color:rgba(0,0,0,.85);padding:8px}ngp-image-picker .popup img{max-height:100%;max-width:100%}}@media (max-width:599px){ngp-image-picker .popup img{margin:0}}ngp-image-picker .popup .control-panel{align-items:stretch;background-color:rgba(0,0,0,.92);border-radius:8px;box-sizing:border-box;color:#fff;display:flex;flex-direction:column;margin:8px;max-width:100%;padding:16px;place-content:stretch flex-start;width:18rem}@media (max-width:599px){ngp-image-picker .popup .control-panel{margin:8px 0;width:100%}}ngp-image-picker .popup .control-panel .title-panel{font-size:17px;font-weight:500;margin-bottom:16px!important;padding:0 4px}ngp-image-picker .popup .control-panel .item-panel{font-size:14px;font-weight:500;padding:0 4px}@-webkit-keyframes show{0%{opacity:0;top:-100vh}to{opacity:1;top:0}}@keyframes show{0%{opacity:0;top:-100vh}to{opacity:1;top:0}}ngp-image-picker .mat-form-field-appearance-fill .mat-form-field-flex{background-color:#fafafa!important}ngp-image-picker .mat-select-panel{background:#fafafa!important}ngp-image-picker input.mat-input-element{color:rgba(0,0,0,.85)}ngp-image-picker .mat-checkbox-background{background-color:#fff}ngp-image-picker .image-croper{border:2.5px solid #fafafa;box-sizing:border-box;height:150px;opacity:0;overflow:auto;position:absolute;resize:both;width:150px}ngp-image-picker .image-croper #image-croper-header{background-color:transparent;color:#fff;cursor:move;height:85%;padding:10px;z-index:10}ngp-image-picker .image-croper #image-croper-header mat-icon{color:#fff}ngp-image-picker .btn{border-radius:4px;cursor:pointer;padding:4px 8px}ngp-image-picker .btn mat-icon{color:rgba(0,0,0,.82)}"]}]}],"members":{"_imageSrc":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":117,"character":3}}]}],"_config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":145,"character":3}}]}],"imagePicker":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":149,"character":3},"arguments":["imagePicker",{"static":false}]}]}],"$imageChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":150,"character":3}}]}],"$imageOriginal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":151,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"onUpload":[{"__symbolic":"method"}],"handleFileSelect":[{"__symbolic":"method"}],"handleReaderLoaded":[{"__symbolic":"method"}],"onOpenEditPanel":[{"__symbolic":"method"}],"onCloseEditPanel":[{"__symbolic":"method"}],"parseToBase64":[{"__symbolic":"method"}],"processConfig":[{"__symbolic":"method"}],"resizedataURL":[{"__symbolic":"method"}],"calculateSize":[{"__symbolic":"method"}],"onChangeQuality":[{"__symbolic":"method"}],"onChangeFormat":[{"__symbolic":"method"}],"onChangeSize":[{"__symbolic":"method"}],"onChangeCrop":[{"__symbolic":"method"}],"wait":[{"__symbolic":"method"}],"dragElement":[{"__symbolic":"method"}],"onCropStateChange":[{"__symbolic":"method"}],"onCrop":[{"__symbolic":"method"}],"onRestore":[{"__symbolic":"method"}],"onRemove":[{"__symbolic":"method"}]}},"NgpImagePickerModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":14,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"NgpImagePickerComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":17,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":18,"character":4},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":19,"character":4},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/material/slider","name":"MatSliderModule","line":21,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":22,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":23,"character":4},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":24,"character":4},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":25,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":26,"character":4},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":27,"character":4}],"exports":[{"__symbolic":"reference","name":"NgpImagePickerComponent"}]}]}],"members":{}}},"origins":{"ImagePickerConf":"./lib/ngp-image-picker.component","ImageConverterInput":"./lib/ngp-image-picker.component","NgpImagePickerComponent":"./lib/ngp-image-picker.component","NgpImagePickerModule":"./lib/ngp-image-picker.module"},"importAs":"ngp-image-picker"}