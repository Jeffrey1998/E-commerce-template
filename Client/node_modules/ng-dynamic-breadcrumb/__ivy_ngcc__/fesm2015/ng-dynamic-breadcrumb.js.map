{"version":3,"file":"ng-dynamic-breadcrumb.js","sources":["../../../projects/ng-dynamic-breadcrumb/src/lib/ng-dynamic-breadcrumb.service.ts","../../../projects/ng-dynamic-breadcrumb/src/lib/ng-dynamic-breadcrumb.component.ts","../../../projects/ng-dynamic-breadcrumb/src/lib/ng-dynamic-breadcrumb.module.ts","../../../projects/ng-dynamic-breadcrumb/src/projects.ts","../../../projects/ng-dynamic-breadcrumb/src/ng-dynamic-breadcrumb.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Breadcrumb } from './breadcrumb.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgDynamicBreadcrumbService {\r\n\r\n  public breadcrumbLabels: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\r\n  public newBreadcrumb: BehaviorSubject<Breadcrumb[]> = new BehaviorSubject<Breadcrumb[]>([]);\r\n\r\n  constructor() { }\r\n\r\n  updateBreadcrumbLabels(labels: any) {\r\n    this.breadcrumbLabels.next(labels);\r\n  }\r\n\r\n  updateBreadcrumb(newBreadcrumb: Breadcrumb[]) {\r\n    this.newBreadcrumb.next(newBreadcrumb);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router, NavigationEnd, PRIMARY_OUTLET, RoutesRecognized } from '@angular/router';\r\nimport { filter, map, mergeMap } from 'rxjs/operators';\r\nimport { Breadcrumb } from './breadcrumb.model';\r\nimport { NgDynamicBreadcrumbService } from './ng-dynamic-breadcrumb.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'app-ng-dynamic-breadcrumb',\r\n  templateUrl: './ng-dynamic-breadcrumb.component.html',\r\n  styleUrls: ['./ng-dynamic-breadcrumb.component.css']\r\n})\r\nexport class NgDynamicBreadcrumbComponent implements OnInit {\r\n\r\n  breadcrumb: Breadcrumb[] = [];\r\n  @Input() bgColor = '#eee';\r\n  @Input() fontSize = '18px';\r\n  @Input() fontColor = '#0275d8';\r\n  @Input() lastLinkColor = '#000';\r\n  @Input() symbol = ' / ';\r\n  params: { [key: string]: any; };\r\n\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private ngDynamicBreadcrumbService: NgDynamicBreadcrumbService\r\n  ) {\r\n    this.breadCrumbData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ngDynamicBreadcrumbService.breadcrumbLabels.subscribe((labelData) => {\r\n      for (const label in labelData) {\r\n        if (labelData.hasOwnProperty(label)) {\r\n          this.breadcrumb.map((crumb) => {\r\n            const labelParams = crumb.label.match(/[^{{]+(?=\\}})/g);\r\n            if (labelParams) {\r\n              for (const labelParam of labelParams) {\r\n                const dynamicData = labelData[label];\r\n                if (labelParam === label) {\r\n                  crumb.label = crumb.label.replace('{{' + labelParam + '}}', dynamicData);\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    this.ngDynamicBreadcrumbService.newBreadcrumb.subscribe((breadcrumb: Breadcrumb[]) => {\r\n      if (breadcrumb.length > 0) {\r\n        this.updateData(this.activatedRoute, breadcrumb);\r\n      }\r\n    });\r\n  }\r\n  breadCrumbData(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .pipe(map(() => this.activatedRoute))\r\n      .pipe(map((route) => {\r\n        while (route.firstChild) { route = route.firstChild; }\r\n        return route;\r\n      }))\r\n      .pipe(filter(route => route.outlet === PRIMARY_OUTLET))\r\n      .subscribe(route => {\r\n        this.params = route.snapshot.params;\r\n        this.updateData(route, null);\r\n      });\r\n  }\r\n\r\n  private updateData(route, newBreadcrumb): void {\r\n    if (route.snapshot.data.breadcrumb || newBreadcrumb) {\r\n      const data = route.snapshot.data.breadcrumb ? route.snapshot.data.breadcrumb : newBreadcrumb;\r\n      const breadcrumb = (JSON.parse(JSON.stringify(data)));\r\n      breadcrumb.map((crumb) => {\r\n\r\n        const urlChunks = crumb.url.split('/');\r\n        for (const chunk of urlChunks) {\r\n          if (chunk.includes(':')) {\r\n            const paramID = chunk.replace(':', '');\r\n            // const routerParamID = route.snapshot.params[paramID];\r\n            const routerParamID = this.params[paramID];\r\n            crumb.url = crumb.url.replace(`:${paramID}`, routerParamID);\r\n          }\r\n        }\r\n\r\n        const labelParams = crumb.label.match(/[^{{]+(?=\\}})/g);\r\n        if (labelParams) {\r\n          for (const labelParam of labelParams) {\r\n            // const routerParamID = route.snapshot.params[labelParam.trim()];\r\n            const routerParamID = this.params[labelParam.trim()];\r\n            if (routerParamID) {\r\n              crumb.label = crumb.label.replace('{{' + labelParam + '}}', routerParamID);\r\n            } else {\r\n              // crumb.label = crumb.label.replace('{{' + labelParam + '}}', '');\r\n            }\r\n          }\r\n        }\r\n\r\n      });\r\n      this.breadcrumb = breadcrumb;\r\n    } else {\r\n      this.breadcrumb = [];\r\n    }\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { NgDynamicBreadcrumbComponent } from './ng-dynamic-breadcrumb.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [NgDynamicBreadcrumbComponent],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule\r\n  ],\r\n  exports: [NgDynamicBreadcrumbComponent]\r\n})\r\nexport class NgDynamicBreadcrumbModule { }\r\n","/*\r\n * Public API Surface of ng-dynamic-breadcrumb\r\n */\r\n\r\nexport * from './lib/ng-dynamic-breadcrumb.service';\r\nexport * from './lib/ng-dynamic-breadcrumb.component';\r\nexport * from './lib/ng-dynamic-breadcrumb.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './projects';\n"]}